'------------------------------------------------------------------------------
' <auto-generated>
'     Este código fue generado por una herramienta.
'     Versión de runtime:4.0.30319.42000
'
'     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
'     se vuelve a generar el código.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On

Imports System
Imports System.ComponentModel
Imports System.Diagnostics
Imports System.Web.Services
Imports System.Web.Services.Protocols
Imports System.Xml.Serialization

'
'Microsoft.VSDesigner generó automáticamente este código fuente, versión=4.0.30319.42000.
'
Namespace WsRisPacs
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Web.Services.WebServiceBindingAttribute(Name:="HisXmlEventsSoap", [Namespace]:="http://clinicasanfelipe.com/")>  _
    Partial Public Class HisXmlEvents
        Inherits System.Web.Services.Protocols.SoapHttpClientProtocol
        
        Private Insert_HISOperationCompleted As System.Threading.SendOrPostCallback
        
        Private Insert_HIS_MFNOperationCompleted As System.Threading.SendOrPostCallback
        
        Private Insert_HIS_MERGEOperationCompleted As System.Threading.SendOrPostCallback
        
        Private Insert_HIS_CANCELOperationCompleted As System.Threading.SendOrPostCallback
        
        Private Insert_HIS_ADTOperationCompleted As System.Threading.SendOrPostCallback
        
        Private useDefaultCredentialsSetExplicitly As Boolean
        
        '''<remarks/>
        Public Sub New()
            MyBase.New
            Me.Url = Global.WebHCE.My.MySettings.Default.WebHCE_WsRisPacs_HisXmlEvents
            If (Me.IsLocalFileSystemWebService(Me.Url) = true) Then
                Me.UseDefaultCredentials = true
                Me.useDefaultCredentialsSetExplicitly = false
            Else
                Me.useDefaultCredentialsSetExplicitly = true
            End If
        End Sub
        
        Public Shadows Property Url() As String
            Get
                Return MyBase.Url
            End Get
            Set
                If (((Me.IsLocalFileSystemWebService(MyBase.Url) = true)  _
                            AndAlso (Me.useDefaultCredentialsSetExplicitly = false))  _
                            AndAlso (Me.IsLocalFileSystemWebService(value) = false)) Then
                    MyBase.UseDefaultCredentials = false
                End If
                MyBase.Url = value
            End Set
        End Property
        
        Public Shadows Property UseDefaultCredentials() As Boolean
            Get
                Return MyBase.UseDefaultCredentials
            End Get
            Set
                MyBase.UseDefaultCredentials = value
                Me.useDefaultCredentialsSetExplicitly = true
            End Set
        End Property
        
        '''<remarks/>
        Public Event Insert_HISCompleted As Insert_HISCompletedEventHandler
        
        '''<remarks/>
        Public Event Insert_HIS_MFNCompleted As Insert_HIS_MFNCompletedEventHandler
        
        '''<remarks/>
        Public Event Insert_HIS_MERGECompleted As Insert_HIS_MERGECompletedEventHandler
        
        '''<remarks/>
        Public Event Insert_HIS_CANCELCompleted As Insert_HIS_CANCELCompletedEventHandler
        
        '''<remarks/>
        Public Event Insert_HIS_ADTCompleted As Insert_HIS_ADTCompletedEventHandler
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://clinicasanfelipe.com/Insert_HIS", RequestNamespace:="http://clinicasanfelipe.com/", ResponseNamespace:="http://clinicasanfelipe.com/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function Insert_HIS( _
                    ByVal TIPOMSG As String,  _
                    ByVal COD_EMPRESA As Integer,  _
                    ByVal COD_SUCURSAL As String,  _
                    ByVal EVENT_ID As String,  _
                    ByVal EVENT_DATETIME As String,  _
                    ByVal EVENT_TYPE_ID As String,  _
                    ByVal ID_PACIENTE As String,  _
                    ByVal RUT_PACIENTE As String,  _
                    ByVal TIPO_PACIENTE As String,  _
                    ByVal DEATH_INDICATOR As String,  _
                    ByVal CAT_NAME As String,  _
                    ByVal LAST_NAME As String,  _
                    ByVal FIRST_NAME As String,  _
                    ByVal BIRTH_DATE As String,  _
                    ByVal GENDER_KEY As String,  _
                    ByVal LAST_UPDATED As String,  _
                    ByVal STREET_ADDRESS As String,  _
                    ByVal CITY As String,  _
                    ByVal COUNTRY As String,  _
                    ByVal PHONE_NUMBER As String,  _
                    ByVal EMAIL As String,  _
                    ByVal VISIT_NUMBER As String,  _
                    ByVal START_DATETIME As String,  _
                    ByVal DURATION As String,  _
                    ByVal STATUS_KEY As String,  _
                    ByVal STATUS As String,  _
                    ByVal PROCEDURE_CODE As String,  _
                    ByVal PROCEDURE_DESCRIPTION As String,  _
                    ByVal ROOM_CODE As String,  _
                    ByVal SOL_MEDICO As String,  _
                    ByVal PAID_FLAG As String,  _
                    ByVal REQUESTED_BY As String,  _
                    ByVal MESSAGE_TYPE As String,  _
                    ByVal PACS_SPS_ID As String) As String
            Dim results() As Object = Me.Invoke("Insert_HIS", New Object() {TIPOMSG, COD_EMPRESA, COD_SUCURSAL, EVENT_ID, EVENT_DATETIME, EVENT_TYPE_ID, ID_PACIENTE, RUT_PACIENTE, TIPO_PACIENTE, DEATH_INDICATOR, CAT_NAME, LAST_NAME, FIRST_NAME, BIRTH_DATE, GENDER_KEY, LAST_UPDATED, STREET_ADDRESS, CITY, COUNTRY, PHONE_NUMBER, EMAIL, VISIT_NUMBER, START_DATETIME, DURATION, STATUS_KEY, STATUS, PROCEDURE_CODE, PROCEDURE_DESCRIPTION, ROOM_CODE, SOL_MEDICO, PAID_FLAG, REQUESTED_BY, MESSAGE_TYPE, PACS_SPS_ID})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub Insert_HISAsync( _
                    ByVal TIPOMSG As String,  _
                    ByVal COD_EMPRESA As Integer,  _
                    ByVal COD_SUCURSAL As String,  _
                    ByVal EVENT_ID As String,  _
                    ByVal EVENT_DATETIME As String,  _
                    ByVal EVENT_TYPE_ID As String,  _
                    ByVal ID_PACIENTE As String,  _
                    ByVal RUT_PACIENTE As String,  _
                    ByVal TIPO_PACIENTE As String,  _
                    ByVal DEATH_INDICATOR As String,  _
                    ByVal CAT_NAME As String,  _
                    ByVal LAST_NAME As String,  _
                    ByVal FIRST_NAME As String,  _
                    ByVal BIRTH_DATE As String,  _
                    ByVal GENDER_KEY As String,  _
                    ByVal LAST_UPDATED As String,  _
                    ByVal STREET_ADDRESS As String,  _
                    ByVal CITY As String,  _
                    ByVal COUNTRY As String,  _
                    ByVal PHONE_NUMBER As String,  _
                    ByVal EMAIL As String,  _
                    ByVal VISIT_NUMBER As String,  _
                    ByVal START_DATETIME As String,  _
                    ByVal DURATION As String,  _
                    ByVal STATUS_KEY As String,  _
                    ByVal STATUS As String,  _
                    ByVal PROCEDURE_CODE As String,  _
                    ByVal PROCEDURE_DESCRIPTION As String,  _
                    ByVal ROOM_CODE As String,  _
                    ByVal SOL_MEDICO As String,  _
                    ByVal PAID_FLAG As String,  _
                    ByVal REQUESTED_BY As String,  _
                    ByVal MESSAGE_TYPE As String,  _
                    ByVal PACS_SPS_ID As String)
            Me.Insert_HISAsync(TIPOMSG, COD_EMPRESA, COD_SUCURSAL, EVENT_ID, EVENT_DATETIME, EVENT_TYPE_ID, ID_PACIENTE, RUT_PACIENTE, TIPO_PACIENTE, DEATH_INDICATOR, CAT_NAME, LAST_NAME, FIRST_NAME, BIRTH_DATE, GENDER_KEY, LAST_UPDATED, STREET_ADDRESS, CITY, COUNTRY, PHONE_NUMBER, EMAIL, VISIT_NUMBER, START_DATETIME, DURATION, STATUS_KEY, STATUS, PROCEDURE_CODE, PROCEDURE_DESCRIPTION, ROOM_CODE, SOL_MEDICO, PAID_FLAG, REQUESTED_BY, MESSAGE_TYPE, PACS_SPS_ID, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub Insert_HISAsync( _
                    ByVal TIPOMSG As String,  _
                    ByVal COD_EMPRESA As Integer,  _
                    ByVal COD_SUCURSAL As String,  _
                    ByVal EVENT_ID As String,  _
                    ByVal EVENT_DATETIME As String,  _
                    ByVal EVENT_TYPE_ID As String,  _
                    ByVal ID_PACIENTE As String,  _
                    ByVal RUT_PACIENTE As String,  _
                    ByVal TIPO_PACIENTE As String,  _
                    ByVal DEATH_INDICATOR As String,  _
                    ByVal CAT_NAME As String,  _
                    ByVal LAST_NAME As String,  _
                    ByVal FIRST_NAME As String,  _
                    ByVal BIRTH_DATE As String,  _
                    ByVal GENDER_KEY As String,  _
                    ByVal LAST_UPDATED As String,  _
                    ByVal STREET_ADDRESS As String,  _
                    ByVal CITY As String,  _
                    ByVal COUNTRY As String,  _
                    ByVal PHONE_NUMBER As String,  _
                    ByVal EMAIL As String,  _
                    ByVal VISIT_NUMBER As String,  _
                    ByVal START_DATETIME As String,  _
                    ByVal DURATION As String,  _
                    ByVal STATUS_KEY As String,  _
                    ByVal STATUS As String,  _
                    ByVal PROCEDURE_CODE As String,  _
                    ByVal PROCEDURE_DESCRIPTION As String,  _
                    ByVal ROOM_CODE As String,  _
                    ByVal SOL_MEDICO As String,  _
                    ByVal PAID_FLAG As String,  _
                    ByVal REQUESTED_BY As String,  _
                    ByVal MESSAGE_TYPE As String,  _
                    ByVal PACS_SPS_ID As String,  _
                    ByVal userState As Object)
            If (Me.Insert_HISOperationCompleted Is Nothing) Then
                Me.Insert_HISOperationCompleted = AddressOf Me.OnInsert_HISOperationCompleted
            End If
            Me.InvokeAsync("Insert_HIS", New Object() {TIPOMSG, COD_EMPRESA, COD_SUCURSAL, EVENT_ID, EVENT_DATETIME, EVENT_TYPE_ID, ID_PACIENTE, RUT_PACIENTE, TIPO_PACIENTE, DEATH_INDICATOR, CAT_NAME, LAST_NAME, FIRST_NAME, BIRTH_DATE, GENDER_KEY, LAST_UPDATED, STREET_ADDRESS, CITY, COUNTRY, PHONE_NUMBER, EMAIL, VISIT_NUMBER, START_DATETIME, DURATION, STATUS_KEY, STATUS, PROCEDURE_CODE, PROCEDURE_DESCRIPTION, ROOM_CODE, SOL_MEDICO, PAID_FLAG, REQUESTED_BY, MESSAGE_TYPE, PACS_SPS_ID}, Me.Insert_HISOperationCompleted, userState)
        End Sub
        
        Private Sub OnInsert_HISOperationCompleted(ByVal arg As Object)
            If (Not (Me.Insert_HISCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent Insert_HISCompleted(Me, New Insert_HISCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://clinicasanfelipe.com/Insert_HIS_MFN", RequestNamespace:="http://clinicasanfelipe.com/", ResponseNamespace:="http://clinicasanfelipe.com/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function Insert_HIS_MFN( _
                    ByVal COD_EMPRESA As Integer,  _
                    ByVal COD_SUCURSAL As String,  _
                    ByVal EVENT_ID As String,  _
                    ByVal EVENT_DATETIME As String,  _
                    ByVal EVENT_TYPE_ID As String,  _
                    ByVal ID_PACIENTE As String,  _
                    ByVal RUT_PACIENTE As String,  _
                    ByVal TIPO_PACIENTE As String,  _
                    ByVal COD_MEDICO As String,  _
                    ByVal NOM_MEDICO As String,  _
                    ByVal APE_MEDICO As String,  _
                    ByVal ESPECIALIDAD As String,  _
                    ByVal FECHA_NACIMIENTO As String,  _
                    ByVal SEXO As String,  _
                    ByVal COD_MEDICO_ALTERNATIVO As String,  _
                    ByVal DIRECCION As String,  _
                    ByVal CIUDAD As String,  _
                    ByVal TELEFONO As String,  _
                    ByVal EMAIL As String,  _
                    ByVal GENERO As String,  _
                    ByVal PAIS As String,  _
                    ByVal STARTTIME As String) As String
            Dim results() As Object = Me.Invoke("Insert_HIS_MFN", New Object() {COD_EMPRESA, COD_SUCURSAL, EVENT_ID, EVENT_DATETIME, EVENT_TYPE_ID, ID_PACIENTE, RUT_PACIENTE, TIPO_PACIENTE, COD_MEDICO, NOM_MEDICO, APE_MEDICO, ESPECIALIDAD, FECHA_NACIMIENTO, SEXO, COD_MEDICO_ALTERNATIVO, DIRECCION, CIUDAD, TELEFONO, EMAIL, GENERO, PAIS, STARTTIME})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub Insert_HIS_MFNAsync( _
                    ByVal COD_EMPRESA As Integer,  _
                    ByVal COD_SUCURSAL As String,  _
                    ByVal EVENT_ID As String,  _
                    ByVal EVENT_DATETIME As String,  _
                    ByVal EVENT_TYPE_ID As String,  _
                    ByVal ID_PACIENTE As String,  _
                    ByVal RUT_PACIENTE As String,  _
                    ByVal TIPO_PACIENTE As String,  _
                    ByVal COD_MEDICO As String,  _
                    ByVal NOM_MEDICO As String,  _
                    ByVal APE_MEDICO As String,  _
                    ByVal ESPECIALIDAD As String,  _
                    ByVal FECHA_NACIMIENTO As String,  _
                    ByVal SEXO As String,  _
                    ByVal COD_MEDICO_ALTERNATIVO As String,  _
                    ByVal DIRECCION As String,  _
                    ByVal CIUDAD As String,  _
                    ByVal TELEFONO As String,  _
                    ByVal EMAIL As String,  _
                    ByVal GENERO As String,  _
                    ByVal PAIS As String,  _
                    ByVal STARTTIME As String)
            Me.Insert_HIS_MFNAsync(COD_EMPRESA, COD_SUCURSAL, EVENT_ID, EVENT_DATETIME, EVENT_TYPE_ID, ID_PACIENTE, RUT_PACIENTE, TIPO_PACIENTE, COD_MEDICO, NOM_MEDICO, APE_MEDICO, ESPECIALIDAD, FECHA_NACIMIENTO, SEXO, COD_MEDICO_ALTERNATIVO, DIRECCION, CIUDAD, TELEFONO, EMAIL, GENERO, PAIS, STARTTIME, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub Insert_HIS_MFNAsync( _
                    ByVal COD_EMPRESA As Integer,  _
                    ByVal COD_SUCURSAL As String,  _
                    ByVal EVENT_ID As String,  _
                    ByVal EVENT_DATETIME As String,  _
                    ByVal EVENT_TYPE_ID As String,  _
                    ByVal ID_PACIENTE As String,  _
                    ByVal RUT_PACIENTE As String,  _
                    ByVal TIPO_PACIENTE As String,  _
                    ByVal COD_MEDICO As String,  _
                    ByVal NOM_MEDICO As String,  _
                    ByVal APE_MEDICO As String,  _
                    ByVal ESPECIALIDAD As String,  _
                    ByVal FECHA_NACIMIENTO As String,  _
                    ByVal SEXO As String,  _
                    ByVal COD_MEDICO_ALTERNATIVO As String,  _
                    ByVal DIRECCION As String,  _
                    ByVal CIUDAD As String,  _
                    ByVal TELEFONO As String,  _
                    ByVal EMAIL As String,  _
                    ByVal GENERO As String,  _
                    ByVal PAIS As String,  _
                    ByVal STARTTIME As String,  _
                    ByVal userState As Object)
            If (Me.Insert_HIS_MFNOperationCompleted Is Nothing) Then
                Me.Insert_HIS_MFNOperationCompleted = AddressOf Me.OnInsert_HIS_MFNOperationCompleted
            End If
            Me.InvokeAsync("Insert_HIS_MFN", New Object() {COD_EMPRESA, COD_SUCURSAL, EVENT_ID, EVENT_DATETIME, EVENT_TYPE_ID, ID_PACIENTE, RUT_PACIENTE, TIPO_PACIENTE, COD_MEDICO, NOM_MEDICO, APE_MEDICO, ESPECIALIDAD, FECHA_NACIMIENTO, SEXO, COD_MEDICO_ALTERNATIVO, DIRECCION, CIUDAD, TELEFONO, EMAIL, GENERO, PAIS, STARTTIME}, Me.Insert_HIS_MFNOperationCompleted, userState)
        End Sub
        
        Private Sub OnInsert_HIS_MFNOperationCompleted(ByVal arg As Object)
            If (Not (Me.Insert_HIS_MFNCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent Insert_HIS_MFNCompleted(Me, New Insert_HIS_MFNCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://clinicasanfelipe.com/Insert_HIS_MERGE", RequestNamespace:="http://clinicasanfelipe.com/", ResponseNamespace:="http://clinicasanfelipe.com/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function Insert_HIS_MERGE( _
                    ByVal COD_EMPRESA As Integer,  _
                    ByVal COD_SUCURSAL As String,  _
                    ByVal EVENT_ID As String,  _
                    ByVal EVENT_DATETIME As String,  _
                    ByVal EVENT_TYPE_ID As String,  _
                    ByVal ID_PACIENTE As String,  _
                    ByVal RUT_PACIENTE As String,  _
                    ByVal TIPO_PACIENTE As String,  _
                    ByVal DEATH_INDICATOR As String,  _
                    ByVal CAT_NAME As String,  _
                    ByVal LAST_NAME As String,  _
                    ByVal FIRST_NAME As String,  _
                    ByVal BIRTH_DATE As String,  _
                    ByVal GENDER_KEY As String,  _
                    ByVal LAST_UPDATED As String,  _
                    ByVal STREET_ADDRESS As String,  _
                    ByVal CITY As String,  _
                    ByVal COUNTRY As String,  _
                    ByVal PHONE_NUMBER As String,  _
                    ByVal EMAIL As String,  _
                    ByVal PATIENT_CLASS_KEY As String,  _
                    ByVal PATIENT_ID_MERGED As String) As String
            Dim results() As Object = Me.Invoke("Insert_HIS_MERGE", New Object() {COD_EMPRESA, COD_SUCURSAL, EVENT_ID, EVENT_DATETIME, EVENT_TYPE_ID, ID_PACIENTE, RUT_PACIENTE, TIPO_PACIENTE, DEATH_INDICATOR, CAT_NAME, LAST_NAME, FIRST_NAME, BIRTH_DATE, GENDER_KEY, LAST_UPDATED, STREET_ADDRESS, CITY, COUNTRY, PHONE_NUMBER, EMAIL, PATIENT_CLASS_KEY, PATIENT_ID_MERGED})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub Insert_HIS_MERGEAsync( _
                    ByVal COD_EMPRESA As Integer,  _
                    ByVal COD_SUCURSAL As String,  _
                    ByVal EVENT_ID As String,  _
                    ByVal EVENT_DATETIME As String,  _
                    ByVal EVENT_TYPE_ID As String,  _
                    ByVal ID_PACIENTE As String,  _
                    ByVal RUT_PACIENTE As String,  _
                    ByVal TIPO_PACIENTE As String,  _
                    ByVal DEATH_INDICATOR As String,  _
                    ByVal CAT_NAME As String,  _
                    ByVal LAST_NAME As String,  _
                    ByVal FIRST_NAME As String,  _
                    ByVal BIRTH_DATE As String,  _
                    ByVal GENDER_KEY As String,  _
                    ByVal LAST_UPDATED As String,  _
                    ByVal STREET_ADDRESS As String,  _
                    ByVal CITY As String,  _
                    ByVal COUNTRY As String,  _
                    ByVal PHONE_NUMBER As String,  _
                    ByVal EMAIL As String,  _
                    ByVal PATIENT_CLASS_KEY As String,  _
                    ByVal PATIENT_ID_MERGED As String)
            Me.Insert_HIS_MERGEAsync(COD_EMPRESA, COD_SUCURSAL, EVENT_ID, EVENT_DATETIME, EVENT_TYPE_ID, ID_PACIENTE, RUT_PACIENTE, TIPO_PACIENTE, DEATH_INDICATOR, CAT_NAME, LAST_NAME, FIRST_NAME, BIRTH_DATE, GENDER_KEY, LAST_UPDATED, STREET_ADDRESS, CITY, COUNTRY, PHONE_NUMBER, EMAIL, PATIENT_CLASS_KEY, PATIENT_ID_MERGED, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub Insert_HIS_MERGEAsync( _
                    ByVal COD_EMPRESA As Integer,  _
                    ByVal COD_SUCURSAL As String,  _
                    ByVal EVENT_ID As String,  _
                    ByVal EVENT_DATETIME As String,  _
                    ByVal EVENT_TYPE_ID As String,  _
                    ByVal ID_PACIENTE As String,  _
                    ByVal RUT_PACIENTE As String,  _
                    ByVal TIPO_PACIENTE As String,  _
                    ByVal DEATH_INDICATOR As String,  _
                    ByVal CAT_NAME As String,  _
                    ByVal LAST_NAME As String,  _
                    ByVal FIRST_NAME As String,  _
                    ByVal BIRTH_DATE As String,  _
                    ByVal GENDER_KEY As String,  _
                    ByVal LAST_UPDATED As String,  _
                    ByVal STREET_ADDRESS As String,  _
                    ByVal CITY As String,  _
                    ByVal COUNTRY As String,  _
                    ByVal PHONE_NUMBER As String,  _
                    ByVal EMAIL As String,  _
                    ByVal PATIENT_CLASS_KEY As String,  _
                    ByVal PATIENT_ID_MERGED As String,  _
                    ByVal userState As Object)
            If (Me.Insert_HIS_MERGEOperationCompleted Is Nothing) Then
                Me.Insert_HIS_MERGEOperationCompleted = AddressOf Me.OnInsert_HIS_MERGEOperationCompleted
            End If
            Me.InvokeAsync("Insert_HIS_MERGE", New Object() {COD_EMPRESA, COD_SUCURSAL, EVENT_ID, EVENT_DATETIME, EVENT_TYPE_ID, ID_PACIENTE, RUT_PACIENTE, TIPO_PACIENTE, DEATH_INDICATOR, CAT_NAME, LAST_NAME, FIRST_NAME, BIRTH_DATE, GENDER_KEY, LAST_UPDATED, STREET_ADDRESS, CITY, COUNTRY, PHONE_NUMBER, EMAIL, PATIENT_CLASS_KEY, PATIENT_ID_MERGED}, Me.Insert_HIS_MERGEOperationCompleted, userState)
        End Sub
        
        Private Sub OnInsert_HIS_MERGEOperationCompleted(ByVal arg As Object)
            If (Not (Me.Insert_HIS_MERGECompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent Insert_HIS_MERGECompleted(Me, New Insert_HIS_MERGECompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://clinicasanfelipe.com/Insert_HIS_CANCEL", RequestNamespace:="http://clinicasanfelipe.com/", ResponseNamespace:="http://clinicasanfelipe.com/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function Insert_HIS_CANCEL( _
                    ByVal COD_EMPRESA As Integer,  _
                    ByVal COD_SUCURSAL As String,  _
                    ByVal EVENT_ID As String,  _
                    ByVal EVENT_DATETIME As String,  _
                    ByVal EVENT_TYPE_ID As String,  _
                    ByVal ID_PACIENTE As String,  _
                    ByVal RUT_PACIENTE As String,  _
                    ByVal TIPO_PACIENTE As String,  _
                    ByVal DEATH_INDICATOR As String,  _
                    ByVal LAST_NAME As String,  _
                    ByVal FIRST_NAME As String,  _
                    ByVal PHONE_NUMBER As String,  _
                    ByVal EMAIL As String,  _
                    ByVal BIRTH_DATE As String,  _
                    ByVal GENDER_KEY As String,  _
                    ByVal PROCEDURE_CODE As String,  _
                    ByVal PROCEDURE_DESCRIPTION As String,  _
                    ByVal SPS_ID As String,  _
                    ByVal SEQUENCE_ID As String,  _
                    ByVal PACS_SPS_ID As String,  _
                    ByVal ROOM_CODE As String,  _
                    ByVal SOL_MEDICO As String,  _
                    ByVal STATUS As String) As String
            Dim results() As Object = Me.Invoke("Insert_HIS_CANCEL", New Object() {COD_EMPRESA, COD_SUCURSAL, EVENT_ID, EVENT_DATETIME, EVENT_TYPE_ID, ID_PACIENTE, RUT_PACIENTE, TIPO_PACIENTE, DEATH_INDICATOR, LAST_NAME, FIRST_NAME, PHONE_NUMBER, EMAIL, BIRTH_DATE, GENDER_KEY, PROCEDURE_CODE, PROCEDURE_DESCRIPTION, SPS_ID, SEQUENCE_ID, PACS_SPS_ID, ROOM_CODE, SOL_MEDICO, STATUS})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub Insert_HIS_CANCELAsync( _
                    ByVal COD_EMPRESA As Integer,  _
                    ByVal COD_SUCURSAL As String,  _
                    ByVal EVENT_ID As String,  _
                    ByVal EVENT_DATETIME As String,  _
                    ByVal EVENT_TYPE_ID As String,  _
                    ByVal ID_PACIENTE As String,  _
                    ByVal RUT_PACIENTE As String,  _
                    ByVal TIPO_PACIENTE As String,  _
                    ByVal DEATH_INDICATOR As String,  _
                    ByVal LAST_NAME As String,  _
                    ByVal FIRST_NAME As String,  _
                    ByVal PHONE_NUMBER As String,  _
                    ByVal EMAIL As String,  _
                    ByVal BIRTH_DATE As String,  _
                    ByVal GENDER_KEY As String,  _
                    ByVal PROCEDURE_CODE As String,  _
                    ByVal PROCEDURE_DESCRIPTION As String,  _
                    ByVal SPS_ID As String,  _
                    ByVal SEQUENCE_ID As String,  _
                    ByVal PACS_SPS_ID As String,  _
                    ByVal ROOM_CODE As String,  _
                    ByVal SOL_MEDICO As String,  _
                    ByVal STATUS As String)
            Me.Insert_HIS_CANCELAsync(COD_EMPRESA, COD_SUCURSAL, EVENT_ID, EVENT_DATETIME, EVENT_TYPE_ID, ID_PACIENTE, RUT_PACIENTE, TIPO_PACIENTE, DEATH_INDICATOR, LAST_NAME, FIRST_NAME, PHONE_NUMBER, EMAIL, BIRTH_DATE, GENDER_KEY, PROCEDURE_CODE, PROCEDURE_DESCRIPTION, SPS_ID, SEQUENCE_ID, PACS_SPS_ID, ROOM_CODE, SOL_MEDICO, STATUS, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub Insert_HIS_CANCELAsync( _
                    ByVal COD_EMPRESA As Integer,  _
                    ByVal COD_SUCURSAL As String,  _
                    ByVal EVENT_ID As String,  _
                    ByVal EVENT_DATETIME As String,  _
                    ByVal EVENT_TYPE_ID As String,  _
                    ByVal ID_PACIENTE As String,  _
                    ByVal RUT_PACIENTE As String,  _
                    ByVal TIPO_PACIENTE As String,  _
                    ByVal DEATH_INDICATOR As String,  _
                    ByVal LAST_NAME As String,  _
                    ByVal FIRST_NAME As String,  _
                    ByVal PHONE_NUMBER As String,  _
                    ByVal EMAIL As String,  _
                    ByVal BIRTH_DATE As String,  _
                    ByVal GENDER_KEY As String,  _
                    ByVal PROCEDURE_CODE As String,  _
                    ByVal PROCEDURE_DESCRIPTION As String,  _
                    ByVal SPS_ID As String,  _
                    ByVal SEQUENCE_ID As String,  _
                    ByVal PACS_SPS_ID As String,  _
                    ByVal ROOM_CODE As String,  _
                    ByVal SOL_MEDICO As String,  _
                    ByVal STATUS As String,  _
                    ByVal userState As Object)
            If (Me.Insert_HIS_CANCELOperationCompleted Is Nothing) Then
                Me.Insert_HIS_CANCELOperationCompleted = AddressOf Me.OnInsert_HIS_CANCELOperationCompleted
            End If
            Me.InvokeAsync("Insert_HIS_CANCEL", New Object() {COD_EMPRESA, COD_SUCURSAL, EVENT_ID, EVENT_DATETIME, EVENT_TYPE_ID, ID_PACIENTE, RUT_PACIENTE, TIPO_PACIENTE, DEATH_INDICATOR, LAST_NAME, FIRST_NAME, PHONE_NUMBER, EMAIL, BIRTH_DATE, GENDER_KEY, PROCEDURE_CODE, PROCEDURE_DESCRIPTION, SPS_ID, SEQUENCE_ID, PACS_SPS_ID, ROOM_CODE, SOL_MEDICO, STATUS}, Me.Insert_HIS_CANCELOperationCompleted, userState)
        End Sub
        
        Private Sub OnInsert_HIS_CANCELOperationCompleted(ByVal arg As Object)
            If (Not (Me.Insert_HIS_CANCELCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent Insert_HIS_CANCELCompleted(Me, New Insert_HIS_CANCELCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://clinicasanfelipe.com/Insert_HIS_ADT", RequestNamespace:="http://clinicasanfelipe.com/", ResponseNamespace:="http://clinicasanfelipe.com/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function Insert_HIS_ADT( _
                    ByVal COD_EMPRESA As Integer,  _
                    ByVal COD_SUCURSAL As String,  _
                    ByVal EVENT_ID As String,  _
                    ByVal EVENT_DATETIME As String,  _
                    ByVal EVENT_TYPE_ID As String,  _
                    ByVal ID_PACIENTE As String,  _
                    ByVal RUT_PACIENTE As String,  _
                    ByVal TIPO_PACIENTE As String,  _
                    ByVal DEATH_INDICATOR As String,  _
                    ByVal CAT_NAME As String,  _
                    ByVal LAST_NAME As String,  _
                    ByVal FIRST_NAME As String,  _
                    ByVal BIRTH_DATE As String,  _
                    ByVal GENDER_KEY As String,  _
                    ByVal LAST_UPDATED As String,  _
                    ByVal STREET_ADDRESS As String,  _
                    ByVal CITY As String,  _
                    ByVal COUNTRY As String,  _
                    ByVal PHONE_NUMBER As String,  _
                    ByVal X_EMAIL As String,  _
                    ByVal PRIMARY As String,  _
                    ByVal PATIENT_CLASS_KEY As String) As String
            Dim results() As Object = Me.Invoke("Insert_HIS_ADT", New Object() {COD_EMPRESA, COD_SUCURSAL, EVENT_ID, EVENT_DATETIME, EVENT_TYPE_ID, ID_PACIENTE, RUT_PACIENTE, TIPO_PACIENTE, DEATH_INDICATOR, CAT_NAME, LAST_NAME, FIRST_NAME, BIRTH_DATE, GENDER_KEY, LAST_UPDATED, STREET_ADDRESS, CITY, COUNTRY, PHONE_NUMBER, X_EMAIL, PRIMARY, PATIENT_CLASS_KEY})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub Insert_HIS_ADTAsync( _
                    ByVal COD_EMPRESA As Integer,  _
                    ByVal COD_SUCURSAL As String,  _
                    ByVal EVENT_ID As String,  _
                    ByVal EVENT_DATETIME As String,  _
                    ByVal EVENT_TYPE_ID As String,  _
                    ByVal ID_PACIENTE As String,  _
                    ByVal RUT_PACIENTE As String,  _
                    ByVal TIPO_PACIENTE As String,  _
                    ByVal DEATH_INDICATOR As String,  _
                    ByVal CAT_NAME As String,  _
                    ByVal LAST_NAME As String,  _
                    ByVal FIRST_NAME As String,  _
                    ByVal BIRTH_DATE As String,  _
                    ByVal GENDER_KEY As String,  _
                    ByVal LAST_UPDATED As String,  _
                    ByVal STREET_ADDRESS As String,  _
                    ByVal CITY As String,  _
                    ByVal COUNTRY As String,  _
                    ByVal PHONE_NUMBER As String,  _
                    ByVal X_EMAIL As String,  _
                    ByVal PRIMARY As String,  _
                    ByVal PATIENT_CLASS_KEY As String)
            Me.Insert_HIS_ADTAsync(COD_EMPRESA, COD_SUCURSAL, EVENT_ID, EVENT_DATETIME, EVENT_TYPE_ID, ID_PACIENTE, RUT_PACIENTE, TIPO_PACIENTE, DEATH_INDICATOR, CAT_NAME, LAST_NAME, FIRST_NAME, BIRTH_DATE, GENDER_KEY, LAST_UPDATED, STREET_ADDRESS, CITY, COUNTRY, PHONE_NUMBER, X_EMAIL, PRIMARY, PATIENT_CLASS_KEY, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub Insert_HIS_ADTAsync( _
                    ByVal COD_EMPRESA As Integer,  _
                    ByVal COD_SUCURSAL As String,  _
                    ByVal EVENT_ID As String,  _
                    ByVal EVENT_DATETIME As String,  _
                    ByVal EVENT_TYPE_ID As String,  _
                    ByVal ID_PACIENTE As String,  _
                    ByVal RUT_PACIENTE As String,  _
                    ByVal TIPO_PACIENTE As String,  _
                    ByVal DEATH_INDICATOR As String,  _
                    ByVal CAT_NAME As String,  _
                    ByVal LAST_NAME As String,  _
                    ByVal FIRST_NAME As String,  _
                    ByVal BIRTH_DATE As String,  _
                    ByVal GENDER_KEY As String,  _
                    ByVal LAST_UPDATED As String,  _
                    ByVal STREET_ADDRESS As String,  _
                    ByVal CITY As String,  _
                    ByVal COUNTRY As String,  _
                    ByVal PHONE_NUMBER As String,  _
                    ByVal X_EMAIL As String,  _
                    ByVal PRIMARY As String,  _
                    ByVal PATIENT_CLASS_KEY As String,  _
                    ByVal userState As Object)
            If (Me.Insert_HIS_ADTOperationCompleted Is Nothing) Then
                Me.Insert_HIS_ADTOperationCompleted = AddressOf Me.OnInsert_HIS_ADTOperationCompleted
            End If
            Me.InvokeAsync("Insert_HIS_ADT", New Object() {COD_EMPRESA, COD_SUCURSAL, EVENT_ID, EVENT_DATETIME, EVENT_TYPE_ID, ID_PACIENTE, RUT_PACIENTE, TIPO_PACIENTE, DEATH_INDICATOR, CAT_NAME, LAST_NAME, FIRST_NAME, BIRTH_DATE, GENDER_KEY, LAST_UPDATED, STREET_ADDRESS, CITY, COUNTRY, PHONE_NUMBER, X_EMAIL, PRIMARY, PATIENT_CLASS_KEY}, Me.Insert_HIS_ADTOperationCompleted, userState)
        End Sub
        
        Private Sub OnInsert_HIS_ADTOperationCompleted(ByVal arg As Object)
            If (Not (Me.Insert_HIS_ADTCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent Insert_HIS_ADTCompleted(Me, New Insert_HIS_ADTCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        Public Shadows Sub CancelAsync(ByVal userState As Object)
            MyBase.CancelAsync(userState)
        End Sub
        
        Private Function IsLocalFileSystemWebService(ByVal url As String) As Boolean
            If ((url Is Nothing)  _
                        OrElse (url Is String.Empty)) Then
                Return false
            End If
            Dim wsUri As System.Uri = New System.Uri(url)
            If ((wsUri.Port >= 1024)  _
                        AndAlso (String.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) = 0)) Then
                Return true
            End If
            Return false
        End Function
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")>  _
    Public Delegate Sub Insert_HISCompletedEventHandler(ByVal sender As Object, ByVal e As Insert_HISCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class Insert_HISCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")>  _
    Public Delegate Sub Insert_HIS_MFNCompletedEventHandler(ByVal sender As Object, ByVal e As Insert_HIS_MFNCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class Insert_HIS_MFNCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")>  _
    Public Delegate Sub Insert_HIS_MERGECompletedEventHandler(ByVal sender As Object, ByVal e As Insert_HIS_MERGECompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class Insert_HIS_MERGECompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")>  _
    Public Delegate Sub Insert_HIS_CANCELCompletedEventHandler(ByVal sender As Object, ByVal e As Insert_HIS_CANCELCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class Insert_HIS_CANCELCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")>  _
    Public Delegate Sub Insert_HIS_ADTCompletedEventHandler(ByVal sender As Object, ByVal e As Insert_HIS_ADTCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class Insert_HIS_ADTCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
End Namespace
